services:
  api:
    container_name: swisscybergrid-api
    build:
      context: ./AramisAPI.jl
      dockerfile: Dockerfile-iig
    networks:
      - swisscybergrid
      - proxy
    volumes:
      - ./AramisAPI.jl:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.swisscybergrid-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.swisscybergrid-api.rule=Host(`swisscybergrid-api.iigweb.hevs.ch`)"
      - "traefik.http.routers.swisscybergrid-api.entrypoints=websecure"
      - "traefik.http.routers.swisscybergrid-api.tls.certresolver=tlsresolver"


  frontend:
    container_name: swisscybergrid-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - swisscybergrid
      - proxy
    volumes:
      - ./frontend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.swisscybergrid-frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.swisscybergrid-frontend.rule=Host(`swisscybergrid.iigweb.hevs.ch`)"
      - "traefik.http.routers.swisscybergrid-frontend.entrypoints=websecure"
      - "traefik.http.routers.swisscybergrid-frontend.tls.certresolver=tlsresolver"

networks:
  swisscybergrid:
    driver: bridge
  proxy:
    external: true
